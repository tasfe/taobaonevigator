DROP TABLE ADDRESS_DETAIL CASCADE CONSTRAINTS;
CREATE TABLE ADDRESS_DETAIL ( 
  ADDRESS_DETAIL_PK NUMBER NOT NULL,
  ADDRESS_LINE_1 VARCHAR2( 70 ) NULL,
  ADDRESS_LINE_2 VARCHAR2( 70 ) NULL,
  ADDRESS_LINE_3 VARCHAR2( 70 ) NULL,
  ADDRESS_LINE_4 VARCHAR2( 70 ) NULL,
  ADDRESS_LINE_5 VARCHAR2( 70 ) NULL,
  CITY VARCHAR2( 40 ) NULL,
  COUNTRY VARCHAR2( 40 ) NULL,
  ADDRESS_TYPE VARCHAR2( 20 ) DEFAULT 'SHIPPING' NOT NULL,
  SOFT_DELETE CHAR( 1 ) DEFAULT 'N' NOT NULL,
  CREATED_DATE TIMESTAMP NOT NULL,
  CREATED_BY VARCHAR2( 40 ) NOT NULL,
  LAST_MODIFIED_DATE TIMESTAMP NULL,
  LAST_MODIFIED_BY VARCHAR2( 40 ) NULL,
  VERSION NUMBER NOT NULL,
  WORK_PHONE VARCHAR2( 40 ) NULL,
  HOME_PHONE VARCHAR2( 40 ) NULL,
  CELL_PHONE VARCHAR2( 40 ) NULL,
  PROVINCE VARCHAR2( 40 ) NULL,
  DISTRICT VARCHAR2( 40 ) NULL,
  CONSTRAINT PK_ADDRESS_DETAIL PRIMARY KEY ( ADDRESS_DETAIL_PK ) 
 );

COMMENT ON COLUMN ADDRESS_DETAIL.ADDRESS_TYPE IS 'Address type will either SHIPPING or BILLING address for an Order.';

DROP TABLE BUS_RULE CASCADE CONSTRAINTS;
CREATE TABLE BUS_RULE ( 
  BUS_RULE_PK NUMBER NOT NULL,
  RULE_FILE_NAME VARCHAR2( 100 ) NOT NULL,
  RULE CLOB NOT NULL,
  RULE_DESCRIPTION VARCHAR2( 1000 ) NOT NULL,
  START_DATE TIMESTAMP NOT NULL,
  END_DATE TIMESTAMP NOT NULL,
  STATUS_FK NUMBER NOT NULL,
  SOFT_DELETE CHAR( 1 ) DEFAULT 'N' NOT NULL,
  CREATED_DATE TIMESTAMP NOT NULL,
  CREATED_BY VARCHAR2( 40 ) NOT NULL,
  LAST_MODIFIED_DATE TIMESTAMP NULL,
  LAST_MODIFIED_BY VARCHAR2( 40 ) NULL,
  VERSION NUMBER NOT NULL,
  REASON_CODE VARCHAR2(10) NULL,
  CONSTRAINT PK_BUS_RULES PRIMARY KEY ( BUS_RULE_PK ) 
 );

CREATE INDEX IDX_BUS_RULE ON BUS_RULE ( STATUS_FK );

COMMENT ON TABLE BUS_RULE IS 'This table will hold number of business rules which will be used by fraud engine.';

COMMENT ON COLUMN BUS_RULE.BUS_RULE_PK IS 'This will be a sequence from oracle';

COMMENT ON COLUMN BUS_RULE.RULE_FILE_NAME IS 'This field give information about which rule file is used for Rule';

COMMENT ON COLUMN BUS_RULE.RULE IS 'This field will have actual rule file stored as Clob';

COMMENT ON COLUMN BUS_RULE.RULE_DESCRIPTION IS 'This will describe rule in details';

COMMENT ON COLUMN BUS_RULE.START_DATE IS 'Start date of rule';

COMMENT ON COLUMN BUS_RULE.END_DATE IS 'End date of rule after this date rule will not be applied on an order.';

COMMENT ON COLUMN BUS_RULE.STATUS_FK IS 'Status of Rule. nStatus can be "ACTIVE", "INACTIVE","DELETED"';

COMMENT ON COLUMN BUS_RULE.CREATED_DATE IS 'Date on which rule is created.';

COMMENT ON COLUMN BUS_RULE.CREATED_BY IS 'Person or userid who has created this rule';

COMMENT ON COLUMN BUS_RULE.LAST_MODIFIED_DATE IS 'Date on which rule was modified last';

COMMENT ON COLUMN BUS_RULE.LAST_MODIFIED_BY IS 'Person or userid who has last modified this rule.';

COMMENT ON COLUMN BUS_RULE.VERSION IS 'For Optimistic Concurrency';

DROP TABLE BUS_RULE_HIT CASCADE CONSTRAINTS;
CREATE TABLE BUS_RULE_HIT ( 
  BUS_RULE_HIT_PK NUMBER NOT NULL,
  BUS_RULE_FK NUMBER NOT NULL,
  HIT_COUNT NUMBER NOT NULL,
  SOFT_DELETE CHAR( 1 ) DEFAULT 'N' NOT NULL,
  CREATED_DATE TIMESTAMP NOT NULL,
  CREATED_BY VARCHAR2( 40 ) NOT NULL,
  LAST_MODIFIED_DATE TIMESTAMP NULL,
  LAST_MODIFIED_BY VARCHAR2( 40 ) NULL,
  VERSION NUMBER NOT NULL,
  CONSTRAINT PK_BUS_RULE_HIT PRIMARY KEY ( BUS_RULE_HIT_PK ) 
);

CREATE INDEX IDX_BUS_RULE_HIT ON BUS_RULE_HIT ( BUS_RULE_FK );

DROP TABLE BUS_RULE_PRIORITY CASCADE CONSTRAINTS;
CREATE TABLE BUS_RULE_PRIORITY ( 
  BUS_RULE_PRIORITY_PK NUMBER NOT NULL,
  PRIORITY NUMBER( 10 ) NOT NULL,
  BUS_RULE_FK NUMBER NOT NULL,
  SOFT_DELETE CHAR( 1 ) DEFAULT 'N' NOT NULL,
  CREATED_DATE TIMESTAMP NOT NULL,
  CREATED_BY VARCHAR2( 40 ) NOT NULL,
  LAST_MODIFIED_DATE TIMESTAMP NULL,
  LAST_MODIFIED_BY VARCHAR2( 40 ) NULL,
  VERSION NUMBER NOT NULL,
  CONSTRAINT PK_RULE_PRIORITY_ PRIMARY KEY ( BUS_RULE_PRIORITY_PK ) 
 );

CREATE INDEX IDX_RULE_PRIORITY ON BUS_RULE_PRIORITY ( BUS_RULE_FK );

DROP TABLE BUS_RULE_PRIORITY_ARCHIVE CASCADE CONSTRAINTS;
CREATE TABLE BUS_RULE_PRIORITY_ARCHIVE ( 
  BUS_RULE_PRIORITY_ARCHIVE_PK NUMBER NOT NULL,
  PRIORITY NUMBER( 10 ) NOT NULL,
  BUS_RULE_FK NUMBER NOT NULL,
  SOFT_DELETE CHAR( 1 ) DEFAULT 'N' NOT NULL,
  CREATED_DATE TIMESTAMP NOT NULL,
  CREATED_BY VARCHAR2( 40 ) NOT NULL,
  LAST_MODIFIED_DATE TIMESTAMP NULL,
  LAST_MODIFIED_BY VARCHAR2( 40 ) NULL,
  VERSION NUMBER NOT NULL,
  PRIORITY_START_DATE DATE NOT NULL,
  PRIORITY_END_DATE DATE NOT NULL
 );

CREATE INDEX IDX_BUS_RULE_PRIORITY_ARCHIVE ON BUS_RULE_PRIORITY_ARCHIVE ( BUS_RULE_FK );

DROP TABLE BUS_RULE_PROPERTY CASCADE CONSTRAINTS;
CREATE TABLE BUS_RULE_PROPERTY ( 
  BUS_RULE_PROPERTY_PK NUMBER NOT NULL,
  BUS_RULE_FK NUMBER NOT NULL,
  PROPERTY_VALUE VARCHAR2(100) NOT NULL,
  PROPERTY_NAME VARCHAR2(100) NOT NULL,
  SOFT_DELETE CHAR( 1 ) DEFAULT 'N' NOT NULL,
  CREATED_DATE TIMESTAMP NOT NULL,
  CREATED_BY VARCHAR2( 40 ) NOT NULL,
  LAST_MODIFIED_DATE TIMESTAMP NULL,
  LAST_MODIFIED_BY VARCHAR2( 40 ) NULL,
  VERSION NUMBER NOT NULL,
CONSTRAINT PK_BUS_RULE_PROPERTY PRIMARY KEY ( BUS_RULE_PROPERTY_PK ) 
 );

CREATE INDEX IDX_BUS_RULE_PROPERTY ON BUS_RULE_PROPERTY ( BUS_RULE_FK );

DROP TABLE FIELD_TYPE_LK CASCADE CONSTRAINTS;
CREATE TABLE FIELD_TYPE_LK ( 
  FIELD_TYPE_PK NUMBER NOT NULL,
  "NAME" VARCHAR2( 100 ) NOT NULL,
  "DESCRIPTION" VARCHAR2( 2000 ) NOT NULL,
  SOFT_DELETE CHAR( 1 ) DEFAULT 'N' NOT NULL,
  CREATED_DATE TIMESTAMP NOT NULL,
  CREATED_BY VARCHAR2( 40 ) NOT NULL,
  LAST_MODIFIED_DATE TIMESTAMP NULL,
  LAST_MODIFIED_BY VARCHAR2( 40 ) NULL,
  VERSION NUMBER NOT NULL,
  CONSTRAINT PK_FIELD_MASTER PRIMARY KEY ( FIELD_TYPE_PK ) ,
  CONSTRAINT IDX_FIELD_TYPE_LK UNIQUE ( NAME ) 
 );

COMMENT ON TABLE FIELD_TYPE_LK IS 'This table will hold field name and field description. This table will not hold any data for fields.';

COMMENT ON COLUMN FIELD_TYPE_LK.FIELD_TYPE_PK IS 'Oracle sequence for field master table';

COMMENT ON COLUMN FIELD_TYPE_LK.NAME IS 'Field name  like Customer Name, Email address, Account Name';

COMMENT ON COLUMN FIELD_TYPE_LK.DESCRIPTION IS 'Description of the field and why it is required.';

COMMENT ON COLUMN FIELD_TYPE_LK.CREATED_DATE IS 'Date on which field is created.';

COMMENT ON COLUMN FIELD_TYPE_LK.CREATED_BY IS 'Created by user name or user id';

COMMENT ON COLUMN FIELD_TYPE_LK.LAST_MODIFIED_DATE IS 'Last modified date';

COMMENT ON COLUMN FIELD_TYPE_LK.LAST_MODIFIED_BY IS 'Last modified user name or user id';

COMMENT ON COLUMN FIELD_TYPE_LK.VERSION IS 'For Optimistic Concurrency';

DROP TABLE ORDER_ARCHIVE CASCADE CONSTRAINTS;
CREATE TABLE ORDER_ARCHIVE ( 
  ORDER_ARCHIVE_PK NUMBER NOT NULL,
  TRANSACTION_ID VARCHAR2( 1000 ) NOT NULL,
  NUMBER_OF_LINES NUMBER NOT NULL,
  PAYMENT_TYPE VARCHAR2( 100 ) NOT NULL,
  ORDER_RECEIVED_DATE DATE NOT NULL,
  STATUS VARCHAR2( 40 ) NOT NULL,
  ORDER_AMOUNT NUMBER( 10 ) NOT NULL,
  ORDER_PRIORITY NUMBER NULL,
  ORDER_RETRY_COUNT NUMBER NULL,
  ARCHIVE_DATE DATE NOT NULL,
  STATUS_REASON VARCHAR2( 1000 ),
  CUSTOMER_ID VARCHAR2( 40 ) NOT NULL,
  CUSTOMER_EMAIL VARCHAR2( 100 ) NULL,
  IP_ADDRESS VARCHAR2( 40 ) NULL,
  SOFT_DELETE CHAR( 1 ) DEFAULT 'N' NOT NULL,
  CREATED_DATE TIMESTAMP NOT NULL,
  CREATED_BY VARCHAR2( 40 ) NOT NULL,
  LAST_MODIFIED_DATE TIMESTAMP NULL,
  LAST_MODIFIED_BY VARCHAR2( 40 ) NULL,
  VERSION NUMBER NOT NULL,
  SHIPPING_ADDRESS VARCHAR2( 1000 ) NULL,
  PRIMARY_PHONE VARCHAR2( 40 ) NULL,
  OMS_ORDER_ID VARCHAR2( 1000 ) NOT NULL,
  CONSTRAINT PK_ORDER_STATUS_0 PRIMARY KEY ( ORDER_ARCHIVE_PK ) 
);

COMMENT ON TABLE ORDER_ARCHIVE IS 'This table will have some order information and status of order.';

COMMENT ON COLUMN ORDER_ARCHIVE.ORDER_ARCHIVE_PK IS 'This is a sequence of order status table';

COMMENT ON COLUMN ORDER_ARCHIVE.TRANSACTION_ID IS 'This will be unique transaction id sent by OMS to fraud engine.';

COMMENT ON COLUMN ORDER_ARCHIVE.NUMBER_OF_LINES IS 'Number of item lines in an order.';

COMMENT ON COLUMN ORDER_ARCHIVE.PAYMENT_TYPE IS 'Order payment type.';

COMMENT ON COLUMN ORDER_ARCHIVE.ORDER_RECEIVED_DATE IS 'Date on which order is received by fraud engine.';

COMMENT ON COLUMN ORDER_ARCHIVE.STATUS IS 'Status of order. This will have one of below values.n"ACCEPT","DENY","CHALLENGE","NOINFO","AWAIT_RESPONSE"';

COMMENT ON COLUMN ORDER_ARCHIVE.ORDER_AMOUNT IS 'Amount of an order.';

COMMENT ON COLUMN ORDER_ARCHIVE.ORDER_PRIORITY IS 'This will determine order priority when scheduler runs for reprocessing an order.';

COMMENT ON COLUMN ORDER_ARCHIVE.ORDER_RETRY_COUNT IS 'How many time order was retried by scheduler. After specific number of retry order will be sent to Fraud Anyalyst as "CHALLENGE".';

COMMENT ON COLUMN ORDER_ARCHIVE.CREATED_DATE IS 'Created date from Order status details table.';

COMMENT ON COLUMN ORDER_ARCHIVE.VERSION IS 'For Optimistic Concurrency';

COMMENT ON COLUMN ORDER_ARCHIVE.OMS_ORDER_ID IS 'Order number passed by OMS to Fraud Engine.';

DROP TABLE ORDER_DETAIL CASCADE CONSTRAINTS;
CREATE TABLE ORDER_DETAIL ( 
  OMS_ORDER_ID VARCHAR2( 1000 ) NOT NULL,
  TRANSACTION_ID VARCHAR2( 100 ) NOT NULL,
  NUMBER_OF_LINES NUMBER NOT NULL,
  PAYMENT_TYPE VARCHAR2( 20 ) NOT NULL,
  ORDER_RECEIVED_DATE DATE NOT NULL,
  ORDER_AMOUNT NUMBER( 10,2 ) NOT NULL,
  ORDER_PRIORITY NUMBER NULL,
  ORDER_RETRY_COUNT NUMBER NULL,
  CUSTOMER_ID VARCHAR2( 40 ) NOT NULL,
  CUSTOMER_EMAIL VARCHAR2( 150 ) NULL,
  IP_ADDRESS VARCHAR2( 40 ) NULL,
  SOFT_DELETE CHAR( 1 ) DEFAULT 'N' NOT NULL,
  CREATED_DATE TIMESTAMP NOT NULL,
  CREATED_BY VARCHAR2( 40 ) NOT NULL,
  LAST_MODIFIED_DATE TIMESTAMP NULL,
  LAST_MODIFIED_BY VARCHAR2( 40 ) NULL,
  VERSION NUMBER NOT NULL,
  ORDER_DETAIL_PK NUMBER NOT NULL,
  CONSTRAINT PK_ORDER_STATUS PRIMARY KEY ( ORDER_DETAIL_PK ) 
);

CREATE INDEX IDX_ORDER_DETAIL ON ORDER_DETAIL ( PAYMENT_TYPE );

COMMENT ON TABLE ORDER_DETAIL IS 'This table will have some order information and status of order.';

COMMENT ON COLUMN ORDER_DETAIL.OMS_ORDER_ID IS 'Order number passed by OMS to Fraud Engine.';

COMMENT ON COLUMN ORDER_DETAIL.TRANSACTION_ID IS 'This will be unique transaction id sent by OMS to fraud engine.';

COMMENT ON COLUMN ORDER_DETAIL.NUMBER_OF_LINES IS 'Number of item lines in an order.';

COMMENT ON COLUMN ORDER_DETAIL.PAYMENT_TYPE IS 'Order payment type.';

COMMENT ON COLUMN ORDER_DETAIL.ORDER_RECEIVED_DATE IS 'Date on which order is received by fraud engine.';

COMMENT ON COLUMN ORDER_DETAIL.ORDER_AMOUNT IS 'Amount of an order.';

COMMENT ON COLUMN ORDER_DETAIL.ORDER_PRIORITY IS 'This will determine order priority when scheduler runs for reprocessing an order.';

COMMENT ON COLUMN ORDER_DETAIL.ORDER_RETRY_COUNT IS 'How many time order was retried by scheduler. After specific number of retry order will be sent to Fraud Anyalyst as "CHALLENGE".';

COMMENT ON COLUMN ORDER_DETAIL.VERSION IS 'For Optimistic Concurrency';

COMMENT ON COLUMN ORDER_DETAIL.ORDER_DETAIL_PK IS 'This is a sequence of order status table';

DROP TABLE ORDER_STATUS CASCADE CONSTRAINTS;
CREATE TABLE ORDER_STATUS ( 
  ORDER_STATUS_PK NUMBER NOT NULL,
  STATUS_REASON VARCHAR2( 1000 ),
  SOFT_DELETE CHAR( 1 ) DEFAULT 'N' NOT NULL,
  CREATED_DATE TIMESTAMP NOT NULL,
  CREATED_BY VARCHAR2( 40 ) NOT NULL,
  LAST_MODIFIED_DATE TIMESTAMP NULL,
  LAST_MODIFIED_BY VARCHAR2( 40 ) NULL,
  VERSION NUMBER NOT NULL,
  ORDER_DETAIL_FK NUMBER NOT NULL,
  STATUS_FK NUMBER NOT NULL,
  BUS_RULE_FK NUMBER NULL,
  POS_NEG_LIST_FK NUMBER NULL,
  REASON_CODE VARCHAR2(10) NULL,
  CONSTRAINT PK_ORDER_STATUS_DETAILS PRIMARY KEY ( ORDER_STATUS_PK ) 
);

CREATE INDEX IDX_ORDER_STATUS ON ORDER_STATUS ( STATUS_FK );

CREATE INDEX IDX_ORDER_STATUS_0 ON ORDER_STATUS ( POS_NEG_LIST_FK );

COMMENT ON TABLE ORDER_STATUS IS 'This table will have order status details for each order processed by Fraud Engine.';

COMMENT ON COLUMN ORDER_STATUS.ORDER_STATUS_PK IS 'Oracle Sequence ID ';

COMMENT ON COLUMN ORDER_STATUS.STATUS_REASON IS 'Status Reason why order has this status. nWhen Fraud analyst Accept or Deny order then FA will provide reason for decison.nWe need to use ENUMn';

COMMENT ON COLUMN ORDER_STATUS.CREATED_DATE IS 'Date time stamp for status';

COMMENT ON COLUMN ORDER_STATUS.CREATED_BY IS 'User Name or user id who has created this row.nIf system generated then it will be "SYSTEM"';

COMMENT ON COLUMN ORDER_STATUS.VERSION IS 'For Optimistic Concurrency';

COMMENT ON COLUMN ORDER_STATUS.ORDER_DETAIL_FK IS 'Foregin key for ORDER_DETAILS table.';

COMMENT ON COLUMN ORDER_STATUS.STATUS_FK IS 'Status of order. This will have one of below values.n"ACCEPT","DENY","CHALLENGE","NOINFO","AWAIT_RESPONSE","ERROR" which will be comming from STATUS_FK table.';

COMMENT ON COLUMN ORDER_STATUS.POS_NEG_LIST_FK IS 'This field will have value as business rule code or positivie negative reason code.';

DROP TABLE POS_NEG_LIST CASCADE CONSTRAINTS;
CREATE TABLE POS_NEG_LIST ( 
  POS_NEG_LIST_PK NUMBER NOT NULL,
  FIELD_VALUE VARCHAR2( 2000 ) NOT NULL,
  SOFT_DELETE CHAR( 1 ) DEFAULT 'N' NOT NULL,
  CREATED_DATE TIMESTAMP NOT NULL,
  CREATED_BY VARCHAR2( 40 ) NOT NULL,
  LAST_MODIFIED_DATE TIMESTAMP NULL,
  LAST_MODIFIED_BY VARCHAR2( 40 ) NULL,
  VERSION NUMBER NOT NULL,
  FIELD_TYPE_FK NUMBER NOT NULL,
  FIELD_SHORT_DESC VARCHAR2( 2000 ) NOT NULL,
  POS_NEG_REASON_FK NUMBER NULL,
  FIELD_LONG_DESC VARCHAR2( 2000 ) NULL,
  CONSTRAINT PK_FIELD_DETAILS PRIMARY KEY ( POS_NEG_LIST_PK ) 
);

CREATE INDEX IDX_POSITIVE_NEGATIVE_LIST ON POS_NEG_LIST ( POS_NEG_REASON_FK );

COMMENT ON TABLE POS_NEG_LIST IS 'This table is used to store data for Positive negative list';

COMMENT ON COLUMN POS_NEG_LIST.FIELD_VALUE IS 'This will be actual value of field which will part of positive or negative list.';

COMMENT ON COLUMN POS_NEG_LIST.CREATED_DATE IS 'Date on which field value is added to the table.';

COMMENT ON COLUMN POS_NEG_LIST.CREATED_BY IS 'Username or user id who has created this value';

COMMENT ON COLUMN POS_NEG_LIST.LAST_MODIFIED_DATE IS 'Last modified date ';

COMMENT ON COLUMN POS_NEG_LIST.LAST_MODIFIED_BY IS 'person or user name who has last modified field value';

COMMENT ON COLUMN POS_NEG_LIST.VERSION IS 'For Optimistic Concurrency';

COMMENT ON COLUMN POS_NEG_LIST.FIELD_SHORT_DESC IS 'Reason to add this field value to positive or negative list. ';

COMMENT ON COLUMN POS_NEG_LIST.POS_NEG_REASON_FK IS 'Reason code from REASON Table';

DROP TABLE POS_NEG_REASON_LK CASCADE CONSTRAINTS;
CREATE TABLE POS_NEG_REASON_LK ( 
  POS_NEG_REASON_PK NUMBER NOT NULL,
  REASON_CODE VARCHAR2( 10 ) NOT NULL,
  REASON_SHORT_DESC VARCHAR2( 200 ) NOT NULL,
  REASON_LONG_DESC VARCHAR2( 2000 ) NOT NULL,
  STATUS_FK NUMBER NOT NULL,
  SOFT_DELETE CHAR( 1 ) DEFAULT 'N' NOT NULL,
  CREATED_DATE TIMESTAMP NOT NULL,
  CREATED_BY VARCHAR2( 40 ) NOT NULL,
  LAST_MODIFIED_DATE TIMESTAMP NULL,
  LAST_MODIFIED_BY VARCHAR2( 40 ) NULL,
  VERSION NUMBER NOT NULL,
  CONSTRAINT PK_REASON_DETAILS PRIMARY KEY ( POS_NEG_REASON_PK ) 
);

CREATE INDEX IDX_POS_NEG_REASON_LK ON POS_NEG_REASON_LK ( STATUS_FK );

COMMENT ON TABLE POS_NEG_REASON_LK IS 'This table will have information about number of reason to approve, challenge or deny a order.';

COMMENT ON COLUMN POS_NEG_REASON_LK.POS_NEG_REASON_PK IS 'Oracle sequence ';

COMMENT ON COLUMN POS_NEG_REASON_LK.REASON_CODE IS 'This will be identifer for a Reason';

COMMENT ON COLUMN POS_NEG_REASON_LK.REASON_SHORT_DESC IS 'Reason information';

COMMENT ON COLUMN POS_NEG_REASON_LK.REASON_LONG_DESC IS 'Detailed description about reason.';

COMMENT ON COLUMN POS_NEG_REASON_LK.STATUS_FK IS 'Reason status can be ACCEPT, DENY, CHALLENGE';

COMMENT ON COLUMN POS_NEG_REASON_LK.CREATED_DATE IS 'Date on which reason is created';

COMMENT ON COLUMN POS_NEG_REASON_LK.CREATED_BY IS 'User name or user id who has created this reason.';

COMMENT ON COLUMN POS_NEG_REASON_LK.VERSION IS 'For Optimistic Concurrency';

DROP TABLE SCHEDULER_DETAIL CASCADE CONSTRAINTS;
CREATE TABLE SCHEDULER_DETAIL ( 
  SCHEDULER_DETAIL_PK NUMBER NOT NULL,
  SCHEDULER_MASTER_FK NUMBER NOT NULL,
  TRANSACTION_ID VARCHAR2( 100 ) NOT NULL,
  TRANSACTION_SENT_TO VARCHAR2( 20 ) NULL,
  SOFT_DELETE CHAR( 1 ) DEFAULT 'N' NOT NULL,
  CREATED_DATE TIMESTAMP NOT NULL,
  CREATED_BY VARCHAR2( 40 ) NOT NULL,
  LAST_MODIFIED_DATE TIMESTAMP NULL,
  LAST_MODIFIED_BY VARCHAR2( 40 ) NULL,
  VERSION NUMBER NOT NULL,
  OMS_ORDER_ID VARCHAR2( 100 ) NOT NULL,
  CONSTRAINT PK_SCHEDULER_DETAILS PRIMARY KEY ( SCHEDULER_DETAIL_PK ) 
);

CREATE INDEX IDX_SCHEDULER_DETAILS ON SCHEDULER_DETAIL ( SCHEDULER_MASTER_FK );

COMMENT ON TABLE SCHEDULER_DETAIL IS 'Details of each scheduler run';

COMMENT ON COLUMN SCHEDULER_DETAIL.SCHEDULER_DETAIL_PK IS 'Oracle sequence id';

COMMENT ON COLUMN SCHEDULER_DETAIL.SCHEDULER_MASTER_FK IS 'Foregin key for SCHEDULER_MASTER table.';

COMMENT ON COLUMN SCHEDULER_DETAIL.TRANSACTION_ID IS 'Transaction id from order details table';

COMMENT ON COLUMN SCHEDULER_DETAIL.TRANSACTION_SENT_TO IS 'This will have information about transaction is sent to which systemn"OMS","CSC-FA","THIRD_PARTY"';

COMMENT ON COLUMN SCHEDULER_DETAIL.OMS_ORDER_ID IS 'Order number from order details';

DROP TABLE SCHEDULER_MASTER CASCADE CONSTRAINTS;
CREATE TABLE SCHEDULER_MASTER ( 
  SCHEDULER_NAME VARCHAR2( 100 ) NOT NULL,
  FREQUENCY NUMBER NOT NULL,
  LAST_RUN_DATE_TIME DATE DEFAULT systimestamp NULL,
  STATUS VARCHAR2( 20 ) NOT NULL,
  START_DATE DATE NOT NULL,
  END_DATE DATE NULL,
  SOFT_DELETE CHAR( 1 ) DEFAULT 'N' NOT NULL,
  CREATED_DATE TIMESTAMP NOT NULL,
  CREATED_BY VARCHAR2( 40 ) NOT NULL,
  LAST_MODIFIED_DATE TIMESTAMP NULL,
  LAST_MODIFIED_BY VARCHAR2( 40 ) NULL,
  VERSION NUMBER NOT NULL,
  SCHEDULER_MASTER_PK NUMBER NOT NULL,
  CONSTRAINT PK_SCHEDULER_MASTER PRIMARY KEY ( SCHEDULER_MASTER_PK ) 
);

COMMENT ON TABLE SCHEDULER_MASTER IS 'This table will have information about scheduler';

COMMENT ON COLUMN SCHEDULER_MASTER.SCHEDULER_NAME IS 'Name of scheduler';

COMMENT ON COLUMN SCHEDULER_MASTER.FREQUENCY IS 'Frequency in minutes';

COMMENT ON COLUMN SCHEDULER_MASTER.LAST_RUN_DATE_TIME IS 'last time when this scheduler ran';

COMMENT ON COLUMN SCHEDULER_MASTER.STATUS IS 'Scheduler status as "ACTIVE","INACTIVE","DELETE"';

COMMENT ON COLUMN SCHEDULER_MASTER.START_DATE IS 'Scheduler Start date';

COMMENT ON COLUMN SCHEDULER_MASTER.END_DATE IS 'Scheduler end date';

COMMENT ON COLUMN SCHEDULER_MASTER.SCHEDULER_MASTER_PK IS 'Oracle sequence id.';

DROP TABLE STATUS_LK CASCADE CONSTRAINTS;
CREATE TABLE STATUS_LK ( 
  STATUS_PK NUMBER NOT NULL,
  "NAME" VARCHAR2( 30 ) NOT NULL,
  "DESCRIPTION" VARCHAR2( 200 ) NOT NULL,
  SOFT_DELETE CHAR( 1 ) DEFAULT 'N' NOT NULL,
  CREATED_DATE TIMESTAMP NOT NULL,
  CREATED_BY VARCHAR2( 40 ) NOT NULL,
  LAST_MODIFIED_DATE TIMESTAMP NULL,
  LAST_MODIFIED_BY VARCHAR2( 40 ) NULL,
  VERSION NUMBER NOT NULL,
  CONSTRAINT PK_FRAUD_ENGINE_STATUS PRIMARY KEY ( STATUS_PK ) ,
  CONSTRAINT IDX_STATUS_LK UNIQUE ( NAME ) 
);

COMMENT ON COLUMN STATUS_LK.VERSION IS 'For Optimistic Concurrency';

DROP VIEW POS_NEG_LIST_VIEW;
CREATE VIEW POS_NEG_LIST_VIEW AS SELECT PNL.POS_NEG_LIST_PK,
    FTL.NAME,
    PNL.FIELD_VALUE,
    PNL.FIELD_SHORT_DESC,
    PNGRL.REASON_CODE,
    PNGRL.REASON_SHORT_DESC,
    SL.NAME AS STATUS
  FROM
    POS_NEG_LIST PNL,
    FIELD_TYPE_LK FTL,
    POS_NEG_REASON_LK PNGRL,
    STATUS_LK SL
  WHERE
    PNL.FIELD_TYPE_FK      =FTL.FIELD_TYPE_PK
  AND PNL.POS_NEG_REASON_FK=PNGRL.POS_NEG_REASON_PK
  AND PNGRL.STATUS_FK      =SL.STATUS_PK
  AND SL.NAME              in ('ACCEPT','CHALLENGE','DENY')
  ORDER BY STATUS, PNGRL.REASON_CODE ASC;

DROP TABLE USER_DETAIL CASCADE CONSTRAINTS;
CREATE TABLE USER_DETAIL(
  USER_DETAIL_PK  NUMBER NOT NULL ENABLE,
  LOGIN_IP_ADDRESS VARCHAR2(30),
  LOGIN_DATE  TIMESTAMP (6) NOT NULL ENABLE,
  SOFT_DELETE CHAR(1) DEFAULT 'N' NOT NULL ENABLE,
  CREATED_DATE TIMESTAMP (6) NOT NULL ENABLE,
  CREATED_BY VARCHAR2(40) NOT NULL ENABLE,
  VERSION NUMBER NOT NULL ENABLE, 
  USER_MASTER_FK NUMBER,
  CONSTRAINT PK_USER_DETAIL PRIMARY KEY (USER_DETAIL_PK)
);

DROP TABLE USER_MASTER CASCADE CONSTRAINTS;
CREATE TABLE USER_MASTER(  
  "USER_MASTER_PK" NUMBER NOT NULL ENABLE,
  "USERNAME" VARCHAR2(30) unique ENABLE,
  "PASSWORD" VARCHAR2(200) NOT NULL ENABLE,
  "FRISTNAME" VARCHAR2(30) NOT NULL ENABLE,
  "LASTNAME" VARCHAR2(30) NOT NULL ENABLE,
  "EMAIL" VARCHAR2(200) NOT NULL ENABLE,
  "PHONE" VARCHAR2(200) NOT NULL ENABLE,
  "LOGINCOUNT" NUMBER NOT NULL ENABLE,
  "SOFT_DELETE" CHAR(1) DEFAULT 'N' NOT NULL ENABLE,
  "CREATED_DATE" TIMESTAMP (6) NOT NULL ENABLE,
  "CREATED_BY" VARCHAR2(40) NOT NULL ENABLE,
  "LAST_MODIFIED_DATE" TIMESTAMP (6),
  "LAST_MODIFIED_BY" VARCHAR2(40),
  "VERSION" NUMBER NOT NULL ENABLE, 
  CONSTRAINT "PK_USER_MASTER" PRIMARY KEY ("USER_MASTER_PK")
);

DROP SEQUENCE ADDRESS_DETAIL_SEQ;

DROP SEQUENCE BUS_RULE_HIT_SEQ;

DROP SEQUENCE BUS_RULE_PRIRITY_SEQ;

DROP SEQUENCE BUS_RULE_SEQ;

DROP SEQUENCE BUS_RULE_PROPERTY_SEQ;

DROP SEQUENCE FIELD_TYPE_LK_SEQ;

DROP SEQUENCE ORDER_DETAIL_SEQ;

DROP SEQUENCE ORDER_STATUS_SEQ;

DROP SEQUENCE POS_NEG_LIST_SEQ;

DROP SEQUENCE POS_NEG_REASON_LK_SEQ;

DROP SEQUENCE SCHEDULE_DETAIL_SEQ;

DROP SEQUENCE SCHEDULE_MASTER_SEQ;

DROP SEQUENCE SEQ_PK;

DROP SEQUENCE STATUS_LK_SEQ;

CREATE SEQUENCE ADDRESS_DETAIL_SEQ START WITH 1;

CREATE SEQUENCE BUS_RULE_HIT_SEQ START WITH 1;

CREATE SEQUENCE BUS_RULE_PRIRITY_SEQ START WITH 1;

CREATE SEQUENCE BUS_RULE_PROPERTY_SEQ START WITH 61;

CREATE SEQUENCE BUS_RULE_SEQ START WITH 1;

CREATE SEQUENCE FIELD_TYPE_LK_SEQ START WITH 1;

CREATE SEQUENCE ORDER_DETAIL_SEQ START WITH 1;

CREATE SEQUENCE ORDER_STATUS_SEQ START WITH 1;

CREATE SEQUENCE POS_NEG_LIST_SEQ START WITH 1;

CREATE SEQUENCE POS_NEG_REASON_LK_SEQ START WITH 1;

CREATE SEQUENCE SCHEDULE_DETAIL_SEQ START WITH 1;

CREATE SEQUENCE SCHEDULE_MASTER_SEQ START WITH 1;

CREATE SEQUENCE SEQ_PK START WITH 1;

CREATE SEQUENCE STATUS_LK_SEQ START WITH 1;


ALTER TABLE ORDER_DETAIL ADD CONSTRAINT TRANSACTION_ID_unique unique(TRANSACTION_ID);

ALTER TABLE BUS_RULE ADD CONSTRAINT FK_BUS_RULE FOREIGN KEY ( STATUS_FK ) REFERENCES STATUS_LK( STATUS_PK ) ON DELETE CASCADE;

ALTER TABLE BUS_RULE_HIT ADD CONSTRAINT FK_BUS_RULE_HIT FOREIGN KEY ( BUS_RULE_FK ) REFERENCES BUS_RULE( BUS_RULE_PK ) ON DELETE CASCADE;

ALTER TABLE BUS_RULE_PRIORITY ADD CONSTRAINT FK_RULE_PRIORITY_BUS_RULE FOREIGN KEY ( BUS_RULE_FK ) REFERENCES BUS_RULE( BUS_RULE_PK ) ON DELETE CASCADE;

ALTER TABLE BUS_RULE_PRIORITY_ARCHIVE ADD CONSTRAINT FK_BUS_RULE_PRIORITY_ARCHIVE FOREIGN KEY ( BUS_RULE_FK ) REFERENCES BUS_RULE( BUS_RULE_PK );

ALTER TABLE BUS_RULE_PROPERTY ADD CONSTRAINT FK_BUS_RULE_PROPERTY_BUS_RULE FOREIGN KEY ( BUS_RULE_FK ) REFERENCES BUS_RULE( BUS_RULE_PK ) ON DELETE CASCADE;

ALTER TABLE ORDER_STATUS ADD CONSTRAINT FK_ORDER_STATUS_ORDER FOREIGN KEY ( ORDER_DETAIL_FK ) REFERENCES ORDER_DETAIL( ORDER_DETAIL_PK );

ALTER TABLE ORDER_STATUS ADD CONSTRAINT FK_ORDER_STATUS_STATUS_LK FOREIGN KEY ( STATUS_FK ) REFERENCES STATUS_LK( STATUS_PK ) ON DELETE CASCADE;

ALTER TABLE POS_NEG_LIST ADD CONSTRAINT FK_FIELD_DETAILS_FIELD_TYPE FOREIGN KEY ( FIELD_TYPE_FK ) REFERENCES FIELD_TYPE_LK( FIELD_TYPE_PK );

ALTER TABLE POS_NEG_LIST ADD CONSTRAINT FK_POSITIVE_NEGATIVE_LIST FOREIGN KEY ( POS_NEG_REASON_FK ) REFERENCES POS_NEG_REASON_LK( POS_NEG_REASON_PK ) ON DELETE CASCADE;

ALTER TABLE POS_NEG_REASON_LK ADD CONSTRAINT FK_POS_NEG_REASON_LK_STATUS_LK FOREIGN KEY ( STATUS_FK ) REFERENCES STATUS_LK( STATUS_PK ) ON DELETE CASCADE;

ALTER TABLE SCHEDULER_DETAIL ADD CONSTRAINT FK_SCHEDULER_DETAILS FOREIGN KEY ( SCHEDULER_MASTER_FK ) REFERENCES SCHEDULER_MASTER( SCHEDULER_MASTER_PK ) ON DELETE CASCADE;

ALTER TABLE USER_DETAIL ADD CONSTRAINT USER_DETAIL_USER_MASTER_FK FOREIGN KEY(USER_MASTER_FK) REFERENCES USER_MASTER(USER_MASTER_PK);
