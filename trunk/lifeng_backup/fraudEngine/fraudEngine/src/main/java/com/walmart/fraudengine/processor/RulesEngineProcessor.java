package com.walmart.fraudengine.processor;

import java.util.ArrayList;
import java.util.List;

import org.drools.KnowledgeBase;
import org.drools.command.Command;
import org.drools.command.CommandFactory;
import org.drools.runtime.ExecutionResults;
import org.drools.runtime.StatelessKnowledgeSession;
import org.springframework.stereotype.Component;

import com.walmart.fraudengine.jaxb.oms.request.Order;
import com.walmart.fraudengine.rules.RuleEngineOrder;
import com.walmart.fraudengine.rules.RuleOrderStatus;
import com.walmart.fraudengine.rules.engine.shell.EngineManager;

/**
 * Core Rule Engine service which is able to score order(s) based on pre-defined
 * production rules.
 */
@Component
public class RulesEngineProcessor {

	private static final String ORDER_STATUS = "orderStatus";

	/**
	 * Rule Engine stateless session entry
	 * 
	 * @param order
	 *            Target order to be scored which is generated by JAXB
	 * @return <tt>RuleOrderStatus</tt> object which contains essential Rule
	 *         Engine execution results
	 */
	public RuleOrderStatus rulesEngineCheck(Order order) {
		RuleOrderStatus orderStatus = new RuleOrderStatus();
		orderStatus.setOrderNo(order.getOrderNo());

		RuleEngineOrder ruleOrder = new RuleEngineOrder(order);

		KnowledgeBase kbase = EngineManager.getKnowledgeBase();
		StatelessKnowledgeSession ksession = kbase.newStatelessKnowledgeSession();

		List<Command<?>> cmds = new ArrayList<Command<?>>();
		cmds.add(CommandFactory.newSetGlobal(ORDER_STATUS, orderStatus, true));
		cmds.add(CommandFactory.newInsert(ruleOrder.getOriginalOrder()));
		cmds.add(CommandFactory.newInsert(ruleOrder));

		//TODO - sprint 3 - check if "results" result in a not null 
		ExecutionResults results = ksession.execute(CommandFactory.newBatchExecution(cmds));
		return (RuleOrderStatus) results.getValue(ORDER_STATUS);
	}

}
